#!/usr/bin/env python3
# encoding=UTF-8

# Copyright Â© 2021 Jakub Wilk <jwilk@jwilk.net>
# SPDX-License-Identifier: MIT

import argparse
import re
import sys

import roman

def num2num(s):
    try:
        return roman.fromRoman(s.upper())
    except roman.InvalidRomanNumeralError:
        pass
    return int(s, 0)

def subst_num(match):
    s = match.group()
    try:
        return str(num2num(s))
    except ValueError:
        return s

def main():
    ap = argparse.ArgumentParser()
    ap.parse_args()
    prog = ap.prog
    num_re = re.compile(r'\b([0-9]+|0x[0-9a-f]+|0o[0-7]+|0b[0-1]+|[MDCLXVI]+)\b', re.IGNORECASE)
    for s in sys.stdin:
        s = num_re.sub(subst_num, s)
        print(s, end='')

if __name__ == '__main__':
    main()

# vim:ts=4 sts=4 sw=4 et
